drop procedure if exists dummy_do_not_use;

delimiter $$
create procedure dummy_do_not_use()
begin
	
   declare sSelectedDatabase varchar(100) default '';

   select database() into sSelectedDatabase;

   start transaction;
       
    set @nUserSettingsRowId = (select idTask from Module where upper(trim(taskName)) = 'User Settings');

    set @nAdminRoleRowId = (select case when (select count(*) from Role where upper(trim(roleName)) = 'ADMIN') > 0 then (select idRole from Role where upper(trim(roleName)) = 'ADMIN') else -1 end as RoleRowId);

    set @maxRowId = (select max(row_id) from component);

    select @nUserSettingsRowId,@nAdminRoleRowId,@maxRowId;
    
    if not exists (select 1 from component where component_name='delete_Users')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('delete_Users','Delete Users' ,0,@nUserSettingsRowId,'/deleteUserModule');
    end if;

    if not exists (select 1 from component where component_name='delete_Roles')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('delete_Roles','Delete Roles',0,@nUserSettingsRowId,'/deleteRoleModule');
    end if;

    if not exists (select 1 from component where component_name='edit_Domain')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('edit_Domain','Edit Domain',0,@nUserSettingsRowId,'/mainDomainHandler');
    end if;

    if not exists (select 1 from component where component_name='delete_Domain')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('delete_Domain','Delete Domain',0,@nUserSettingsRowId,'/mainDomainHandler');
    end if;

    if not exists (select 1 from component where component_name='dimension_Library')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('dimension_Library','Dimension Library',0,@nUserSettingsRowId,'/dimensionViewList');
    end if;

    if not exists (select 1 from component where component_name='edit_Dimension')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('edit_Dimension','Edit Dimension',0,@nUserSettingsRowId,'/saveDimensionRecord');
    end if;

    if not exists (select 1 from component where component_name='delete_Dimension')  then
        INSERT INTO component (component_name,component_title,component_type,module_row_id,http_url) VALUES ('delete_Dimension','Delete Dimension',0,@nUserSettingsRowId,'/deleteDimensionRecord');
    end if;


    /* insert all access rights for admin user */
    insert into component_access (role_row_id, component_row_id) select @nAdminRoleRowId, row_id from component where @nAdminRoleRowId > -1 and row_id > @maxRowId;

    commit;

end $$
delimiter ;

call dummy_do_not_use;
drop procedure if exists dummy_do_not_use;